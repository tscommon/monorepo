{
  "name": "@tscommon/synchronized",
  "version": "0.0.2",
  "license": "MIT",
  "author": "7078731+igrek8@users.noreply.github.com",
  "description": "In an async environment, a race condition occurs when two or more async operations attempt to update mutable shared data at the same time. @synchronized decorator offers a mechanism to avoid race conditions by synchronizing async operations access to shared data",
  "keywords": [
    "synchronization",
    "execution-control",
    "execution-order",
    "race-condition"
  ],
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tscommon/monorepo.git"
  },
  "bugs": {
    "url": "https://github.com/tscommon/monorepo/issues"
  },
  "scripts": {
    "build": "tsc -p tsconfig.build.json --outDir dist",
    "test": "vitest --run",
    "test:coverage": "vitest --run --coverage"
  }
}
